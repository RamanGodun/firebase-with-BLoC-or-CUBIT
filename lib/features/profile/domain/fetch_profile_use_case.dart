import 'package:firebase_with_bloc_or_cubit/core/utils_shared/typedef.dart';
import 'package:firebase_with_bloc_or_cubit/core/shared_domain_layer/use_cases_contracts/base_use_case.dart';
import 'package:firebase_with_bloc_or_cubit/core/base_modules/errors_handling/either/either_extensions/either_getters_x.dart';
import 'package:firebase_with_bloc_or_cubit/core/base_modules/errors_handling/utils/observers/loggers/failure_logger_x.dart';
import 'package:firebase_with_bloc_or_cubit/features/profile/domain/i_repo.dart';
import 'shared_entities/_user.dart';

/// üß© [FetchProfileUseCase2] ‚Äî Gets user profile from repository by UID, if not exist - create
//
final class FetchProfileUseCase
    extends BaseUseCaseWithParams<UserEntity, String> {
  ///-----------------------------------------------
  final IProfileRepo _repo;
  const FetchProfileUseCase(this._repo);

  @override
  ResultFuture<UserEntity> call(String uid) async {
    // 1Ô∏è‚É£ –ü—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å
    final result = await _repo.getProfile(uid: uid);
    if (result.isRight) return result;

    // 2Ô∏è‚É£ –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî –ø—Ä–æ–±—É—î–º–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å (—á–∏—Å—Ç–∏–π –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –º–µ—Ç–æ–¥)
    result.leftOrNull?.log();
    await _repo.createUserProfile(uid);

    // 3Ô∏è‚É£ –©–µ —Ä–∞–∑ –ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
    return _repo.getProfile(uid: uid);
  }
}
